{"version":3,"sources":["hoc/Auxiliary.js","hoc/withClass.js","context/auth-context.js","components/Persons/Person/Person.js","components/Persons/Persons.js","components/Cockpit/Cockpit.js","containers/App.js","reportWebVitals.js","index.js","components/Cockpit/Cockpit.module.css","containers/App.module.css","components/Persons/Person/Person.module.css"],"names":["Auxiliary","props","children","withClass","WrappedComponent","className","AuthContext","createContext","authenticated","login","click","name","age","changed","Consumer","context","type","onClick","onChange","value","classes","Person","Persons","persons","map","person","index","clicked","event","id","Cockpit","title","personsLength","showPersons","toggle","authContext","useContext","buttonClasses","Red","assignedClasses","push","red","bold","join","removePersonHandler","personIndex","setState","state","splice","nameChangedHandler","findIndex","p","target","togglePersonsHandler","loginHandler","otherState","this","appTitle","renderPersons","Provider","length","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87386d50.chunk.js","sourcesContent":["const Auxiliary = (props) => props.children;\n\nexport default Auxiliary;\n","/* eslint-disable react/jsx-props-no-spreading */\nconst withClass = (WrappedComponent, className) => ((props) => (\n  <div className={className}>\n    <WrappedComponent {...props} />\n  </div>\n));\n\nexport default withClass;\n","import { createContext } from 'react';\n\nconst AuthContext = createContext({\n  authenticated: false,\n  // better auto-completion from IDE\n  login: () => {},\n});\n\nexport default AuthContext;\n","import PropTypes from 'prop-types';\nimport Aux from '../../../hoc/Auxiliary';\nimport withClass from '../../../hoc/withClass';\nimport classes from './Person.module.css';\nimport AuthContext from '../../../context/auth-context';\n\nconst Person = (props) => {\n  const {\n    click, name, age, children, changed,\n  } = props;\n  return (\n    <Aux>\n      <AuthContext.Consumer>\n        { (context) => (context.authenticated ? <p>Authenticated</p> : <p>Please log in</p>)}\n      </AuthContext.Consumer>\n      <button\n        type=\"button\"\n        onClick={click}\n      >\n        I&apos;m\n        {' '}\n        {name}\n        {' '}\n        and I am\n        {' '}\n        {age}\n        {' '}\n        years old!\n      </button>\n      <p>{children}</p>\n      <input type=\"text\" onChange={changed} value={name} />\n    </Aux>\n  );\n};\nPerson.propTypes = {\n  click: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  changed: PropTypes.func.isRequired,\n};\n\nexport default withClass(Person, classes.Person);\n","import Person from './Person/Person';\n\nconst Persons = (props) => (\n  props.persons.map((person, index) => (\n    <Person\n      click={() => props.clicked(index)}\n      name={person.name}\n      age={person.age}\n      key={person.id}\n      changed={(event) => props.changed(event, person.id)}\n    />\n  ))\n);\n\nexport default Persons;\n","import { useContext } from 'react';\nimport classes from './Cockpit.module.css';\nimport AuthContext from '../../context/auth-context';\n\nconst Cockpit = (props) => {\n  const {\n    title, personsLength, showPersons, toggle,\n  } = props;\n  const authContext = useContext(AuthContext);\n  let buttonClasses = '';\n\n  if (showPersons) {\n    buttonClasses = classes.Red;\n  }\n\n  // red and bold are set in App.css (globals)\n  const assignedClasses = [];\n  if (personsLength <= 2) {\n    assignedClasses.push(classes.red);\n  }\n  if (personsLength <= 1) {\n    assignedClasses.push(classes.bold);\n  }\n  return (\n    <div className={classes.Cockpit}>\n      <h1>{title}</h1>\n      <p className={assignedClasses.join(' ')}>This is really working</p>\n      <button\n        type=\"button\"\n        className={buttonClasses}\n        onClick={toggle}\n      >\n        Toggle Persons\n      </button>\n      <button\n        type=\"button\"\n        onClick={authContext.login}\n      >\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default Cockpit;\n","import { Component } from 'react';\nimport classes from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport withClass from '../hoc/withClass';\nimport Aux from '../hoc/Auxiliary';\nimport AuthContext from '../context/auth-context';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [\n        { id: 'dfssddafd2', name: 'Derping', age: 23 },\n        { id: 'dfsafdg4f2', name: 'Derper', age: 69 },\n        { id: 'dfsafs34d2', name: 'Derpadette', age: 420 },\n      ],\n      // eslint-disable-next-line react/no-unused-state\n      otherState: 'some other value',\n      showPersons: false,\n      authenticated: false,\n    };\n  }\n\n  removePersonHandler = (personIndex) => {\n    this.setState((state) => {\n      const persons = [...state.persons]\n        .splice(personIndex, 1);\n      return { persons };\n    });\n  }\n\n  nameChangedHandler = (event, id) => {\n    // const person = Object.assign({}, persons[personIndex])\n    this.setState((state) => {\n      const persons = [...state.persons];\n      const personIndex = persons.findIndex((p) => p.id === id);\n      persons[personIndex].name = event.target.value;\n      return { persons };\n    });\n  }\n\n  togglePersonsHandler = () => {\n    this.setState((state) => ({\n      showPersons: !state.showPersons,\n    }));\n  }\n\n  loginHandler = () => {\n    this.setState({\n      authenticated: true,\n    });\n  }\n\n  render() {\n    const { persons, showPersons, authenticated } = this.state;\n    const { appTitle } = this.props;\n    let renderPersons = null;\n\n    if (showPersons) {\n      renderPersons = (\n        <Persons\n          persons={persons}\n          clicked={this.removePersonHandler}\n          changed={this.nameChangedHandler}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <AuthContext.Provider value={{\n          authenticated,\n          login: this.loginHandler,\n        }}\n        >\n          <Cockpit\n            title={appTitle}\n            showPersons={showPersons}\n            personsLength={persons.length}\n            toggle={this.togglePersonsHandler}\n          />\n          {renderPersons}\n        </AuthContext.Provider>\n      </Aux>\n    );\n  }\n}\n\nexport default withClass(App, classes.App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App appTitle=\"Person Manager\" />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Cockpit_red__3GSoJ\",\"bold\":\"Cockpit_bold__3urf2\",\"Cockpit\":\"Cockpit_Cockpit__snX-D\",\"Red\":\"Cockpit_Red__2ee36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1IQbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__2_l3Y\"};"],"sourceRoot":""}